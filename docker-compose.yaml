version: '3.8'
services:
  db:
    image: postgres:16-bullseye
    env_file:
      - ./.env.example
    environment:
      POSTGRES_DB: ${SQL_DATABASE:-audit}
      POSTGRES_USER: ${SQL_USER:-postgres}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-postgres}
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - ${SQL_PORT:-5432}
    restart: on-failure

  web:
    build: 
      context: ./  
    image: mobile_audit
    env_file:
      - ./.env.example
    entrypoint: [ '/entrypoint/web_entrypoint.sh' ]  # Ruta correcta dentro del contenedor
    volumes:
      - .:/app
      - ./entrypoint:/entrypoint  # Montando la carpeta 'entrypoint' correctamente
    expose:
      - "8000"
    depends_on:
      - db
    restart: on-failure

  nginx:
    image: nginx:stable-bullseye
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - web
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3.13.0-management
    env_file:
      - ./.env.example
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    volumes:
      - ./rabbitmq/logs/:/var/log/rabbitmq/
    expose:
      - "5672"
    depends_on:
      - web
    restart: on-failure

  worker:
    image: mobile_audit
    env_file:
      - ./.env.example
    entrypoint: [ '/entrypoint/worker_entrypoint.sh' ]  # Ruta correcta dentro del contenedor
    volumes:
      - .:/app
      - ./entrypoint:/entrypoint  # Montando la carpeta 'entrypoint' correctamente
    links:
      - rabbitmq
      - web
    depends_on:
      - rabbitmq
    restart: on-failure

volumes:
  db-data:
